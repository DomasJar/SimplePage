{"version":3,"sources":["components/Header.js","components/Logo.js","components/Footer.js","components/Carousel.js","components/ContactMe.js","components/Intro.js","components/Media.js","App.js","serviceWorker.js","index.js"],"names":["sBar","Logo","width","height","transparent","animationName","file","Header","props","handleScroll","prevScrollpos","state","currentScrollpos","getScrollElement","scrollTop","visible","setState","SimpleBar","document","getElementById","addEventListener","this","removeEventListener","className","classNames","Component","Footer","d","Date","style","fontSize","padding","paddingTop","getFullYear","ContactMe","onFade","onMouseOver","onMouseOut","Intro","Media","src","alt","onClick","window","open","App","id","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+IAMIA,E,kFCGWC,EANK,WACZ,OACI,kBAAC,IAAD,CAAgBC,MAAO,IAAKC,OAAQ,IAAKC,aAAa,EAAMC,cAAc,OAAOC,KAAK,yB,2DD0CnFC,G,kBAvCX,WAAaC,GAAQ,IAAD,8BAChB,4CAAMA,KAmBVC,aAAe,WAAO,IACXC,EAAiB,EAAKC,MAAtBD,cACDE,EAAmBZ,EAAKa,mBAAmBC,UAC3CC,EAAUL,EAAgBE,EAChC,EAAKI,SAAS,CACVN,cAAeE,EACfG,aAvBJ,EAAKJ,MAAQ,CACTD,cAAe,EACfK,SAAS,GALG,E,kFAWhBf,EAAO,IAAIiB,IAAUC,SAASC,eAAe,SAAU,KAClDN,mBAAmBO,iBAAiB,SAAUC,KAAKZ,gB,6CAKxDT,EAAKa,mBAAmBS,oBAAoB,SAAUD,KAAKZ,gB,+BAc3D,OACI,yBAAKc,UAAWC,IAAW,SAAU,CAAC,kBAAmBH,KAAKV,MAAMI,WAChE,wBAAIQ,UAAW,YAAf,iB,GAlCKE,cEgBNC,GCrBQD,YDAD,WACd,IAAIE,EAAI,IAAIC,KAOZ,OACI,yBAAKL,UAAW,mBACZ,4BAAQM,MARH,CACTC,SAAU,oBACVC,QAAS,QACTC,WAAY,SAMJ,yBAAKT,UAAW,OACZ,yBAAKA,UAAW,OAAhB,kBACsBI,EAAEM,cADxB,2BEsBTC,E,YA9BX,WAAa1B,GAAQ,IAAD,8BAChB,4CAAMA,KAQV2B,OAAS,WACL,EAAKnB,SAAS,CACVD,SAAU,EAAKJ,MAAMI,WAPzB,EAAKJ,MAAQ,CACTI,SAAS,GALG,E,sEAgBhB,OACI,yBAAMqB,YAAaf,KAAKc,OAAQE,WAAYhB,KAAKc,OAAQZ,UAAW,QAChE,6BACI,uBAAGA,UAAWC,IAAW,SAAU,CAAC,eAAgBH,KAAKV,MAAMI,WAA/D,WACJ,yBAAKQ,UAAWC,IAAW,SAAU,CAAC,aAAcH,KAAKV,MAAMI,WAC3D,gEACA,2D,GAvBIU,aCgCTa,E,YA/BX,WAAa9B,GAAQ,IAAD,8BAChB,4CAAMA,KAQV2B,OAAS,WACL,EAAKnB,SAAS,CACVD,SAAU,EAAKJ,MAAMI,WAPzB,EAAKJ,MAAQ,CACTI,SAAS,GALG,E,sEAgBhB,OAEI,yBAAMqB,YAAaf,KAAKc,OAAQE,WAAYhB,KAAKc,OAAQZ,UAAW,QAChE,6BACA,uBAAGA,UAAWC,IAAW,SAAU,CAAC,eAAgBH,KAAKV,MAAMI,WAA/D,SACA,yBAAKQ,UAAWC,IAAW,SAAU,CAAC,aAAcH,KAAKV,MAAMI,WAC3D,+CACA,8F,GAxBAU,aC+BLc,E,YAhCX,WAAa/B,GAAQ,IAAD,8BAChB,4CAAMA,KAQV2B,OAAS,WACL,EAAKnB,SAAS,CACVD,SAAU,EAAKJ,MAAMI,WAPzB,EAAKJ,MAAQ,CACTI,SAAS,GALG,E,sEAgBhB,OACI,yBAAMqB,YAAaf,KAAKc,OAAQE,WAAYhB,KAAKc,OAAQZ,UAAW,QAChE,6BACI,uBAAGA,UAAWC,IAAW,SAAU,CAAC,eAAgBH,KAAKV,MAAMI,WAA/D,SACA,yBAAKQ,UAAWC,IAAW,SAAU,CAAC,aAAcH,KAAKV,MAAMI,WAC3D,yBAAKQ,UAAW,cACZ,yBAAKA,UAAW,cAAeiB,IAAK,kCAAmCC,IAAK,eAAgBC,QAAS,kBAAKC,OAAOC,KAAK,mFAAoF,aAC1M,yBAAKrB,UAAW,cAAeiB,IAAK,0BAA2BC,IAAK,UAAWC,QAAS,kBAAKC,OAAOC,KAAK,sCAAuC,qB,GAxBxJnB,aC2CLoB,MAjCf,WACE,OACI,yBAAKtB,UAAU,OACX,kBAAC,IAAD,CAAWuB,GAAG,QAAQjB,MAAO,CAAC1B,OAAQ,UAClC,kBAAC,EAAD,MACA,yBAAKoB,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,cACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,cACX,yBAAKA,UAAW,OACZ,kBAAC,EAAD,QAGR,yBAAKA,UAAU,cACX,yBAAKA,UAAW,QACZ,kBAAC,EAAD,SAIZ,kBAAC,EAAD,SC5BMwB,QACW,cAA7BJ,OAAOK,SAASC,UAEe,UAA7BN,OAAOK,SAASC,UAEhBN,OAAOK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASlC,SAASC,eAAe,SD2H3C,kBAAmBkC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,gB","file":"static/js/main.da63486f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport classNames from \"classnames\";\r\nimport SimpleBar from \"simplebar\";\r\n\r\nimport './Components.css';\r\n\r\nlet sBar;\r\nclass Header extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            prevScrollpos: 0,\r\n            visible: true\r\n        };\r\n    }\r\n\r\n    // Adds an event listener when the component is mount.\r\n    componentDidMount() {\r\n        sBar = new SimpleBar(document.getElementById('myBar'), '');\r\n        sBar.getScrollElement().addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    // Remove the event listener when the component is unmount.\r\n    componentWillUnmount() {\r\n        sBar.getScrollElement().removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    // Hide or show the menu.\r\n    handleScroll = () => {\r\n        const {prevScrollpos} = this.state;\r\n        const currentScrollpos = sBar.getScrollElement().scrollTop;\r\n        const visible = prevScrollpos > currentScrollpos;\r\n        this.setState({\r\n            prevScrollpos: currentScrollpos,\r\n            visible\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <nav className={classNames(\"navbar\", {\"navbar--hidden\": !this.state.visible})}>\r\n                <h1 className={\"nav-item\"}>DomasJar</h1>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport FlareComponent from \"flare-react\";\r\n\r\nexport const Logo = () => {\r\n        return (\r\n            <FlareComponent width={400} height={400} transparent={true} animationName=\"Fade\" file=\"res/Equilateral.flr\"/>\r\n        );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\n\r\nexport const Footer = () =>{\r\n        var d = new Date();\r\n        var styles = {\r\n            fontSize: 'calc(6px + 1vmin)',\r\n            padding: '2vmin',\r\n            paddingTop: '50px'\r\n\r\n        }\r\n        return (\r\n            <div className={'container-fluid'}>\r\n                <footer style={styles}>\r\n                    <div className={\"row\"}>\r\n                        <div className={'col'}>\r\n                            Copyright &copy; {d.getFullYear()} Dominykas Jarutis\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\n\r\nclass Carousel extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"carouselMy\" className=\"carousel slide\" data-ride=\"carousel\">\r\n                <ol className=\"carousel-indicators\">\r\n                    <li data-target=\"#carouselMy\" data-slide-to=\"0\" className=\"active\"/>\r\n                    <li data-target=\"#carouselMy\" data-slide-to=\"1\"/>\r\n                    <li data-target=\"#carouselMy\" data-slide-to=\"2\"/>\r\n                </ol>\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"600\"\r\n                             height=\"400\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                             preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\"\r\n                             aria-label=\"First slide\"><title>Placeholder</title>\r\n                            <rect width=\"100%\" height=\"100%\" fill=\"#315477\"/>\r\n                            <text x=\"50%\" y=\"50%\" fill=\"#555\" dy=\".3em\">First slide</text>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"600\"\r\n                             height=\"400\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                             preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\"\r\n                             aria-label=\"Second slide\"><title>Placeholder</title>\r\n                            <rect width=\"100%\" height=\"100%\" fill=\"#5f3666\"/>\r\n                            <text x=\"50%\" y=\"50%\" fill=\"#444\" dy=\".3em\">Second slide</text>\r\n                        </svg>\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        <svg className=\"bd-placeholder-img bd-placeholder-img-lg d-block w-100\" width=\"600\"\r\n                             height=\"400\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                             preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\"\r\n                             aria-label=\"Third slide\"><title>Placeholder</title>\r\n                            <rect width=\"100%\" height=\"100%\" fill=\"#552d2d\"/>\r\n                            <text x=\"50%\" y=\"50%\" fill=\"#333\" dy=\".3em\">Third slide</text>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Carousel;","import React, {Component} from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport './Components.css'\r\n\r\nclass ContactMe extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            visible: true\r\n        };\r\n    }\r\n\r\n    onFade = () => {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div  onMouseOver={this.onFade} onMouseOut={this.onFade} className={\"cont\"} >\r\n                <div >\r\n                    <p className={classNames(\"cont-2\", {\"o--reveal-2\": !this.state.visible})}>Contact</p>\r\n                <div className={classNames(\"hidden\", {\"o--reveal\": !this.state.visible})}>\r\n                    <p>Feel free to contact me if needed</p>\r\n                    <p>placeholder@email.com</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactMe;","import React, {Component} from 'react';\r\n\r\nimport './Components.css'\r\nimport classNames from \"classnames\";\r\n\r\nclass Intro extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            visible: true\r\n        };\r\n    }\r\n\r\n    onFade = () => {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div  onMouseOver={this.onFade} onMouseOut={this.onFade} className={\"cont\"} >\r\n                <div >\r\n                <p className={classNames(\"cont-2\", {\"o--reveal-2\": !this.state.visible})}>Hello</p>\r\n                <div className={classNames(\"hidden\", {\"o--reveal\": !this.state.visible})}>\r\n                    <p>My name is Domas</p>\r\n                    <p>I am an amateur music producer and a hobbyist programmer</p>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, {Component} from 'react';\r\nimport classNames from \"classnames\";\r\n\r\nclass Media extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n\r\n        this.state = {\r\n            visible: true\r\n        };\r\n    }\r\n\r\n    onFade = () => {\r\n        this.setState({\r\n            visible: !this.state.visible\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div  onMouseOver={this.onFade} onMouseOut={this.onFade} className={\"cont\"} >\r\n                <div >\r\n                    <p className={classNames(\"cont-2\", {\"o--reveal-2\": !this.state.visible})}>Media</p>\r\n                    <div className={classNames(\"hidden\", {\"o--reveal\": !this.state.visible})}>\r\n                        <div className={\"mcontainer\"}>\r\n                            <img className={\"pad-lr icon\"} src={'res/Spotify_Icon_CMYK_Black.png'} alt={\"spotify_icon\"} onClick={()=> window.open(\"https://open.spotify.com/artist/5eDqoeZQwEBOIsCeMH1KRd?si=XOVeWx8ASAKRRgPONn4CbQ\", \"_blank\")}></img>\r\n                            <img className={\"pad-lr icon\"} src={'res/Ig-Logo_May2016.png'} alt={\"ig_icon\"} onClick={()=> window.open(\"https://www.instagram.com/domasjar/\", \"_blank\")}></img>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Media;","import React from 'react';\nimport SimpleBar from 'simplebar-react';\n\nimport 'simplebar/dist/simplebar.min.css';\nimport './App.css';\n\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Carousel from \"./components/Carousel\";\nimport Footer from \"./components/Footer\";\nimport ContactMe from \"./components/ContactMe\";\nimport Intro from \"./components/Intro\";\nimport Media from \"./components/Media\";\nfunction App() {\n  return (\n      <div className=\"App\">\n          <SimpleBar id=\"myBar\" style={{height: '100vh'}}>\n              <Header/>\n              <div className=\"container-fluid\">\n                  <div className=\"row\">\n                      <div className=\"col\">\n                          <Logo/>\n                      </div>\n                  </div>\n                  <div className=\"row pad-ud\">\n                      <div className=\"col\">\n                          <Intro/>\n                      </div>\n                  </div>\n                  <div className=\"row pad-ud\">\n                      <div className={\"col\"}>\n                          <Media/>\n                      </div>\n                  </div>\n                  <div className=\"row pad-ud\">\n                      <div className={\"col \"}>\n                          <ContactMe/>\n                      </div>\n                  </div>\n              </div>\n              <Footer/>\n          </SimpleBar>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}